using Z80Assembler.Tokens;

namespace Z80Assembler.Ast;

public enum InstructionType
{
    Nop,
    Ld,
    Inc,
    Dec,
    Rlca,
    Ex,
    Add,
    Rrca,
    Djnz,
    Rla,
    Rra,
    Jr,
    Daa,
    Cpl,
    Scf,
    Ccf,
    Halt,
    Adc,
    Sub,
    Sbc,
    And,
    Xor,
    Or,
    Cp,
    Ret,
    Pop,
    Jp,
    Call,
    Push,
    Rst,
    Exx,
    In,
    Di,
    Ei,
    Rlc,
    Rrc,
    Rl,
    Rr,
    Sla,
    Sra,
    Sll,
    Srl,
    Bit,
    Res,
    Set,
    Neg,
    Retn,
    Im,
    Reti,
    Rrd,
    Rld,
    Ldi,
    Cpi,
    Ini,
    Outi,
    Ldd,
    Cpd,
    Ind,
    Outd,
    Ldir,
    Cpir,
    Inir,
    Otir,
    Lddr,
    Cpdr,
    Indr,
    Otdr,
}

public static class InstructionTypeExtensions
{
    public static InstructionType? ToInstruction(this TokenType tokenType)
    {
        return tokenType switch
        {
            TokenType.Nop => InstructionType.Nop,
            TokenType.Ld => InstructionType.Ld,
            TokenType.Inc => InstructionType.Inc,
            TokenType.Dec => InstructionType.Dec,
            TokenType.Rlca => InstructionType.Rlca,
            TokenType.Ex => InstructionType.Ex,
            TokenType.Add => InstructionType.Add,
            TokenType.Rrca => InstructionType.Rrca,
            TokenType.Djnz => InstructionType.Djnz,
            TokenType.Rla => InstructionType.Rla,
            TokenType.Rra => InstructionType.Rra,
            TokenType.Jr => InstructionType.Jr,
            TokenType.Daa => InstructionType.Daa,
            TokenType.Cpl => InstructionType.Cpl,
            TokenType.Scf => InstructionType.Scf,
            TokenType.Ccf => InstructionType.Ccf,
            TokenType.Halt => InstructionType.Halt,
            TokenType.Adc => InstructionType.Adc,
            TokenType.Sub => InstructionType.Sub,
            TokenType.Sbc => InstructionType.Sbc,
            TokenType.And => InstructionType.And,
            TokenType.Xor => InstructionType.Xor,
            TokenType.Or => InstructionType.Or,
            TokenType.Cp => InstructionType.Cp,
            TokenType.Ret => InstructionType.Ret,
            TokenType.Pop => InstructionType.Pop,
            TokenType.Jp => InstructionType.Jp,
            TokenType.Call => InstructionType.Call,
            TokenType.Push => InstructionType.Push,
            TokenType.Rst => InstructionType.Rst,
            TokenType.Exx => InstructionType.Exx,
            TokenType.In => InstructionType.In,
            TokenType.Di => InstructionType.Di,
            TokenType.Ei => InstructionType.Ei,
            TokenType.Rlc => InstructionType.Rlc,
            TokenType.Rrc => InstructionType.Rrc,
            TokenType.Rl => InstructionType.Rl,
            TokenType.Rr => InstructionType.Rr,
            TokenType.Sla => InstructionType.Sla,
            TokenType.Sra => InstructionType.Sra,
            TokenType.Sll => InstructionType.Sll,
            TokenType.Srl => InstructionType.Srl,
            TokenType.Bit => InstructionType.Bit,
            TokenType.Res => InstructionType.Res,
            TokenType.Set => InstructionType.Set,
            TokenType.Neg => InstructionType.Neg,
            TokenType.Retn => InstructionType.Retn,
            TokenType.Im => InstructionType.Im,
            TokenType.Reti => InstructionType.Reti,
            TokenType.Rrd => InstructionType.Rrd,
            TokenType.Rld => InstructionType.Rld,
            TokenType.Ldi => InstructionType.Ldi,
            TokenType.Cpi => InstructionType.Cpi,
            TokenType.Ini => InstructionType.Ini,
            TokenType.Outi => InstructionType.Outi,
            TokenType.Ldd => InstructionType.Ldd,
            TokenType.Cpd => InstructionType.Cpd,
            TokenType.Ind => InstructionType.Ind,
            TokenType.Outd => InstructionType.Outd,
            TokenType.Ldir => InstructionType.Ldir,
            TokenType.Cpir => InstructionType.Cpir,
            TokenType.Inir => InstructionType.Inir,
            TokenType.Otir => InstructionType.Otir,
            TokenType.Lddr => InstructionType.Lddr,
            TokenType.Cpdr => InstructionType.Cpdr,
            TokenType.Indr => InstructionType.Indr,
            TokenType.Otdr => InstructionType.Otdr,
            _ => null
        };
    }
}